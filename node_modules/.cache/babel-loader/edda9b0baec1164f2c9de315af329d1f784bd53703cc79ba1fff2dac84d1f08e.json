{"ast":null,"code":"import qs from \"qs\";\nconst DEFAULT_HEADERS = {\n  Accept: \"application/json, text/plain, /\",\n  \"Content-Type\": \"application/json\"\n};\nfunction APIHelper(method, url, data) {\n  let isJSON = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  if (!headers) {\n    headers = {\n      Accept: \"application/json, text/plain, /\",\n      \"Content-Type\": \"application/json\"\n    };\n  }\n  let isFailed = false;\n  const options = {\n    method,\n    headers\n  };\n  if (data && isJSON) options.body = JSON.stringify(data);\n  if (!isJSON) options.body = data;\n  return new Promise((resolve, reject) => {\n    fetch(url, options).then(res => {\n      if (res.status === 200 || res.status === 201 || res.status === 202) {\n        if (res.headers.get(\"Content-Type\").includes(\"text/html\")) {\n          return res.text();\n        }\n        return res.json();\n      }\n      isFailed = true;\n      return res.json();\n    }).then(response => {\n      if (isFailed) throw response;\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}\n_c = APIHelper;\nconst APIRequestGenerator = function (rawURL) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let url = new URL(rawURL);\n  if (params && typeof params === \"object\") {\n    url.search = qs.stringify(params, {\n      arrayFormat: \"brackets\"\n    });\n  }\n  const headers = {\n    ...DEFAULT_HEADERS\n  };\n  if (token) headers.Authorization = `Bearer ${token}`;\n  url = url.toString();\n  return {\n    url,\n    headers\n  };\n};\n_c2 = APIRequestGenerator;\nexport { DEFAULT_HEADERS, APIRequestGenerator };\nexport default APIHelper;\nvar _c, _c2;\n$RefreshReg$(_c, \"APIHelper\");\n$RefreshReg$(_c2, \"APIRequestGenerator\");","map":{"version":3,"names":["qs","DEFAULT_HEADERS","Accept","APIHelper","method","url","data","isJSON","arguments","length","undefined","headers","isFailed","options","body","JSON","stringify","Promise","resolve","reject","fetch","then","res","status","get","includes","text","json","response","catch","error","_c","APIRequestGenerator","rawURL","params","token","URL","search","arrayFormat","Authorization","toString","_c2","$RefreshReg$"],"sources":["/Users/szelam/Downloads/pet-front-end/src/base/APIHelper.js"],"sourcesContent":["import qs from \"qs\";\n\nconst DEFAULT_HEADERS = {\n  Accept: \"application/json, text/plain, /\",\n  \"Content-Type\": \"application/json\",\n};\n\nfunction APIHelper(method, url, data, isJSON = true, headers = null) {\n  if (!headers) {\n    headers = {\n      Accept: \"application/json, text/plain, /\",\n      \"Content-Type\": \"application/json\",\n    };\n  }\n  let isFailed = false;\n\n  const options = { method, headers };\n\n  if (data && isJSON) options.body = JSON.stringify(data);\n\n  if (!isJSON) options.body = data;\n\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then((res) => {\n        if (res.status === 200 || res.status === 201 || res.status === 202) {\n          if (res.headers.get(\"Content-Type\").includes(\"text/html\")) {\n            return res.text();\n          }\n\n          return res.json();\n        }\n        isFailed = true;\n        return res.json();\n      })\n      .then((response) => {\n        if (isFailed) throw response;\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\nconst APIRequestGenerator = (rawURL, params = null, token = null) => {\n  let url = new URL(rawURL);\n  if (params && typeof params === \"object\") {\n    url.search = qs.stringify(params, { arrayFormat: \"brackets\" });\n  }\n  const headers = { ...DEFAULT_HEADERS };\n  if (token) headers.Authorization = `Bearer ${token}`;\n  url = url.toString();\n  return { url, headers };\n};\n\nexport { DEFAULT_HEADERS, APIRequestGenerator };\n\nexport default APIHelper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}